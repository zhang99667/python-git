"""列表的添加操作"""
print("############# 列表添加操作 ###############")
# 向列表的末尾添加一个元素
lst = [10, 20, 30]
print("添加元素之前：", lst, "列表id", id(lst))
# 在列表的尾部添加一个元素
lst.append(100)
print("添加元素之后：", lst, "列表id", id(lst))

# 在列表的末尾添加至少一个元素
lst2 = ["hello", "world"]
# 将 lst2 做为一个元素，添加到 lst 列表的末尾
lst.extend(lst2)
print("将Lst2添加至lst：", lst, "列表id", id(lst))

# 在列表的任意位置添加一个元素
lst.insert(1, 90)
print("在lst中1的位置上添加90：", lst, "列表id", id(lst))

# 切片，在任意位置上添加N多个元素
lst3 = [True, False, "lst3"]
lst[1:] = lst3
print("利用切片添加元素：", lst)

"""列表的删除操作"""
######################################################################
print("############# 列表删除操作 ###############")

lst = [10, 20, 30, 40, 50, 60, 70, 30]
print("删除元素之前：", lst, "列表id", id(lst))

# 在列表中移除一个元素，若有重复元素只移除第一个元素
# 若移除的元素在列表中不存在，则报错 -> ValueError : list.remove(x) : x not in list
lst.remove(30)

# pop() 根据索引移除元素
# 如果指定的索引不存在，则抛出异常 -> IndexError: pop index out of range
lst.pop(1)
print("删除索引1位置的元素：", lst)

# 如果pop()不写参数，则默认删除最后一个位置上的元素
lst.pop()
print("不写参数，则默认删除最后一个位置上的元素：", lst)

print("=========利用切片删除元素，将产生一个新的列表对象============")
# 利用切片删除元素，每次至少删除一个元素
print("原列表:", lst)
print("切片后的列表（留下区间 [1,3) 位置上的元素）：", lst[1:3])  # 切片的区间是 左闭右开

# 不产生新的列表的切片方法
# 将列表lst中1-3的位置置空
lst[1:3] = []
print("将列表lst中 [1,3) 的位置置空：", lst)

# 清除列表中的所有元素
lst.clear()
print("删除列表中的所有元素", lst)

# del语句将列表对象删除
del lst
print("删除列表对象")

"""列表的修改操作"""
######################################################################
print("############# 列表修改操作 ###############")
lst = [10, 20, 30, 40]
print("原列表：", lst)

# 一次修改一个数值
lst[2] = 100
print("修改索引为2的位置元素为100：", lst)

# 利用切片进行修改
lst[1:3] = [300, 400, 500, 600, 700, 800]
print("将列表中 [1,3] 位置上的元素进行替换", lst)
